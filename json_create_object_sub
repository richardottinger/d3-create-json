SUBROUTINE JSON.CREATE.OBJECT(KV_ARRAY, JSON.OBJECT)
*  RETURNS AN JSON OBJECT THAT CONTAINS {KEY:VALUE} PAIRS
   EQUATE AM TO CHAR(254)
   EQUATE TRUE TO 1
   EQUATE FALSE TO 0
   
   IF NOT(ASSIGNED(KV_ARRAY)) THEN CRT "Array of key value pairs not defined!";CRT; RETURN
   PAIRS = DCOUNT(KV_ARRAY,AM)
   KEY.VALUE.PAIRS=''
   FOR PAIR=1 TO PAIRS 
      GOSUB PROCESS.KEY.VALUE
   NEXT I
   JSON.OBJECT = '{' : KEY.VALUE.PAIRS : '}'
RETURN
*
PROCESS.KEY.VALUE:
   KEY.VALUE.PAIR = ':'
   CONTENT        = KV_ARRAY<PAIR,2>
   IF INDEX(KV_ARRAY<PAIR,1>,':',1)>0 THEN 
      GOSUB BY.FLAG
   END ELSE
      GOSUB BY.VALUE
   END
   GOSUB ADD.KEY.VALUE.PAIR
RETURN
*
BY.FLAG:
   CALL STRING.LEFT(FIELD(KV_ARRAY<PAIR,1>,':',1),1,VALUE.FLAG)
   KEY.NAME  = FIELD(KV_ARRAY<PAIR,1>,':',2)
   CALL STRING.WRAP.PREPEND(KEY.NAME,'"',KEY.VALUE.PAIR)  ;* says WRAP KEY WITH double quotes and prepend the key before the colon that was passed in
   BEGIN CASE
      CASE VALUE.FLAG = '!'
         GOSUB ADD.BOOLEAN.VALUE
      CASE VALUE.FLAG EQ FALSE
         GOSUB ADD.VALUE.WITHOUT.QUOTES
      CASE 1
         GOSUB ADD.VALUE.WITH.QUOTES
   END CASE
RETURN

BY.VALUE:
   KEY.NAME       = KV_ARRAY<PAIR,1>
   CALL STRING.WRAP.PREPEND(KEY.NAME,'"',KEY.VALUE.PAIR)
   IF NUM(CONTENT) THEN
      GOSUB ADD.VALUE.WITHOUT.QUOTES
   END ELSE
      GOSUB IS.OBJECT
      IF VALUE.IS.OBJECT THEN GOSUB ADD.VALUE.WITHOUT.QUOTES ELSE GOSUB ADD.VALUE.WITH.QUOTES
   END
RETURN

ADD.VALUE.WITH.QUOTES:
   CALL STRING.WRAP.APPEND(CONTENT,'"',KEY.VALUE.PAIR)
RETURN

ADD.VALUE.WITHOUT.QUOTES:
   CALL STRING.APPEND(CONTENT,KEY.VALUE.PAIR)
RETURN

ADD.BOOLEAN.VALUE:
   IF INDEX("true1",CONTENT,1)>0 THEN CONTENT="true" ELSE CONTENT="false"
   GOSUB ADD.VALUE.WITHOUT.QUOTES
RETURN

ADD.KEY.VALUE.PAIR:
   CALL STRING.LIST(PAIR,PAIRS,',',KEY.VALUE.PAIR)       ;* ADD A COMMA AFTER EACH PAIR EXCEPT THE LAST
   CALL STRING.APPEND(KEY.VALUE.PAIR,KEY.VALUE.PAIRS)    ;* ADD THE CURRENT KEY/VALUE PAIR 
RETURN

IS.OBJECT:
*  ASSUME VALUE IS AN OBJECT IF WRAPPED IN {}
   IF LEN(CONTENT) GE 2 THEN
      CALL STRING.LEFT(CONTENT,1,FIRST.CHAR)
      CALL STRING.RIGHT(CONTENT,1,LAST.CHAR)
      IF FIRST.CHAR EQ '{' AND LAST.CHAR EQ '}' THEN 
         VALUE.IS.OBJECT = TRUE 
      END ELSE 
         VALUE.IS.OBJECT = FALSE
      END
      RETURN
   END
   VALUE.IS.OBJECT=FALSE
RETURN
